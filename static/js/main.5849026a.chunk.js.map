{"version":3,"sources":["components/navbar.js","structure/array.js","algorithms/sorting/bubbleSort.js","algorithms/sorting/selectionSort.js","App.js","index.js"],"names":["Navbar","style","fontSize","href","className","Array","useState","selectionSortAnimation","bubbleSortAnimation","length","setLength","array","setArray","arr","setArr","appStyleArray","textAlign","marginTop","shape","map","value","index","display","backgroundColor","margin","padding","boxSizing","height","width","document","getElementById","offsetWidth","useEffect","i","push","min","max","Math","floor","random","FormGroup","Label","for","ceil","Input","type","name","id","onChange","event","preventDefault","target","onClick","j","temp","console","log","bubbleSort","animation","min_index","selectionSort","App","ReactDOM","render","basename"],"mappings":"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","file":"static/js/main.5849026a.chunk.js","sourcesContent":["import '../style/navbar.css';\r\nconst Navbar = () => {\r\n\r\n  return (\r\n    <header>\r\n        <a style={{fontSize: \"25px\"}} href=\"#\">AlgoViz</a>\r\n        <nav>\r\n            <ul className=\"nav__links\">\r\n                <li><a href=\"#\">Arrays</a></li>\r\n                <li><a href=\"#\">Graphs</a></li>\r\n                <li><a href=\"#\">Trees</a></li>\r\n            </ul>\r\n        </nav>\r\n        <a className=\"cta\" href=\"#\"><button>Contact</button></a>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { useEffect, useState } from 'react';\r\nimport { \r\n    FormGroup,\r\n    Label,\r\n    Input\r\n } from 'reactstrap';\r\nimport { bubbleSort } from '../algorithms/sorting/bubbleSort';\r\nimport { selectionSort } from '../algorithms/sorting/selectionSort';\r\n\r\nconst Array = () => {\r\n    const [selectionSortAnimation] = useState([])\r\n    const [bubbleSortAnimation] = useState([])\r\n    const [length, setLength] = useState(0)\r\n    const [array, setArray] = useState([])\r\n    const [arr, setArr] = useState([])\r\n\r\n    const appStyleArray = {\r\n        textAlign: 'center',\r\n        marginTop: '10px',\r\n    }\r\n\r\n    const randomNumber = (min, max) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min );\r\n    }\r\n    \r\n    const shape = array.map((value, index) => (\r\n        <p  style={{\r\n            display: 'inline-block', \r\n            backgroundColor: 'rgba(0,136,169, 1)',\r\n            margin: '1px',\r\n            padding: '20px 1px',\r\n            boxSizing: 'border-box',\r\n            height: `${value*1.3}vh`,\r\n            width: `${((document.getElementById('test').offsetWidth/length)/1.5)}px` }} key={index}>&nbsp;</p>\r\n    ))\r\n\r\n    // For sizing, play with width and padding and measurement units.\r\n    \r\n    useEffect(() => {\r\n        setArr([])\r\n        for (let i=0; i < length; i++ ) {\r\n            arr.push(randomNumber(1, (length)))\r\n        }\r\n        setArray(arr)\r\n    }, [length])\r\n\r\n    const handleSlider = (event) => {\r\n        event.preventDefault()\r\n        setLength(event.target.value)\r\n    }\r\n    return (\r\n        <>\r\n        <div style={appStyleArray}>\r\n            <FormGroup>\r\n                <p style={{margin: \"10px\"}}><Label for=\"range\">Select Array Length: {Math.ceil(length)}</Label></p>\r\n                <Input style={{width: \"40%\"}} type=\"range\" name=\"range\" id=\"range\" onChange={handleSlider}/>\r\n            </FormGroup>\r\n            <a className=\"cta\" onClick={() => bubbleSort(array, {bubbleSortAnimation})}><button>Bubble Sort</button></a>\r\n            <a className=\"cta\" onClick={() => selectionSort(array, {selectionSortAnimation})}><button >Selection Sort</button></a>\r\n        </div>\r\n        <div id=\"test\" style={appStyleArray}>\r\n            {shape}\r\n            {/* {console.log(((document.getElementById('test').offsetWidth/length)/4)-1)} */}\r\n        </div>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default Array;\r\n","export const bubbleSort = (arr, {bubbleSortAnimation}) => {\r\n    for ( let i = 0; i < arr.length - 1; i++) {\r\n        for ( let j = 0; j < arr.length - i - 1; j++) {\r\n            if ( arr[j] > arr[j+1] ) {\r\n                let temp = arr[j]\r\n                arr[j] = arr[j+1]\r\n                arr[j+1] = temp\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Bubble Sort:\", arr)\r\n}","export const selectionSort = (arr, {animation}) => {\r\n    let min_index = 0\r\n    for (let i = 0; i < arr.length - 1; i++ ) {\r\n        min_index = i\r\n        for (let j = i + 1; j < arr.length; j++ ) {\r\n            if (arr[j] < arr[min_index]) {\r\n                min_index = j\r\n            }\r\n        }\r\n        let temp = arr[min_index]\r\n        arr[min_index] = arr[i]\r\n        arr[i] = temp\r\n    }\r\n    console.log(\"Selection Sort:\", arr)\r\n}","import Navbar from './components/navbar';\nimport Array from './structure/array';\n// import { Nav } from 'reactstrap';\n\nconst App = () => {\n\n  const appStyle = {\n    width: \"80%\",\n    margin: 'auto'\n  }\n\n\n  return (\n    <>\n      <Navbar></Navbar>\n      <body style={appStyle}>\n        <Array></Array>\n      </body>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}